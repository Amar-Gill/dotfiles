# vim
alias v="v-fn"
function v-fn() {
  nvim ${*:-''}
}
alias vl="nvim -c 'set bg=light'"
alias gsv="git status -s | awk '{print \$2}' | fzf | xargs nvim"
alias gsvl="git status -s | awk '{print \$2}' | fzf | xargs nvim -c 'set bg=light'"
alias vf="nvim -c 'Telescope find_files'"
alias vrg="nvim -c 'Telescope live_grep'"

# general
alias ls="ls -GH"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias src="source ~/.zshrc"

# git
alias ga="git add"
alias gdf="git diff"
alias gdfs="git diff --staged"
alias gst="git status"
alias gcmsg="git commit -m"
alias gco="git checkout"
alias gs="git switch"
alias gp="git push"
alias gpf="git push --force-with-lease"
function gpu()
{
  local current_branch="$(git branch --show-current)"
  [[ -z $current_branch ]] && return
  git push --set-upstream origin $current_branch
}

# utilities
function colors256() {
  for i in {0..255};
  do print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+$'\n'};
  done
}

# thefuck
eval $(thefuck --alias)

# nvm lazy loader wrapper
function nvm() {
  unset -f nvm
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --no-use # This loads nvm
  nvm $@
}

# node
alias pn="pnpm"
alias pnx="pnpx"

# docker
function dc-fn() {
  docker compose $*
}
alias dc="dc-fn"

# kubernetes
alias k="kubectl"

# call this anytime to refetch completion
function load-kubectl-completion() {
  [[ ! $commands[kubectl] ]] && return
  kubectl completion zsh >| $KUBECTL_ZSH_COMPLETION_PATH
  source $KUBECTL_ZSH_COMPLETION_PATH
  echo "New kubectl completion file saved to $KUBECTL_ZSH_COMPLETION_PATH and ready to use."
}

function source-kubectl-completion() {
  [[ ! $commands[kubectl] ]] && return
  [[ -f $KUBECTL_ZSH_COMPLETION_PATH ]] && source $KUBECTL_ZSH_COMPLETION_PATH && return
  echo 'No kubectl completion file found. Fetching it now.'
  load-kubectl-completion
}

# Ruby and rbenv
function rbenv() {
  unset -f rbenv
  export PATH="$PATH:$HOMEBREW_PREFIX/opt/openssl@3/bin"
  export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$HOMEBREW_PREFIX/opt/openssl@3/lib/pkgconfig:$HOMEBREW_PREFIX/opt/readline/lib/pkgconfig"
  eval "$(rbenv init - zsh)"
  export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$HOMEBREW_PREFIX/opt/openssl@3"
  rbenv $@
}
